name: racine_ci-cd_app

services:
  proxy:
    image: nginx:1.27-alpine
    container_name: proxy
    depends_on:
      - frontend
      - backend
    ports:
      - "${PROXY_HTTP_PORT}:80"
      - "${PROXY_HTTPS_PORT}:443"
    volumes:
      - ./infra/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/proxy/conf.d:/etc/nginx/conf.d:ro
      # IMPORTANT: fallback to dev1 if ENV_NAME is not defined in the env file
      - ./certs/${ENV_NAME:-dev1}:/etc/nginx/certs:ro
    environment:
      - NGINX_PORT=80
    healthcheck:
      test: ["CMD", "nginx", "-t"]
    networks:
      - appnet
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        # Safe defaults so Dockerfile always sees a value
        ENV_NAME: ${ENV_NAME:-dev1}
        INCLUDE_CA: ${INCLUDE_CA:-0}
    image: racine_ci_cd_frontend:latest
    container_name: frontend
    healthcheck:
      test: ["CMD", "test", "-f", "/usr/share/nginx/html/index.html"]
    networks:
      - appnet
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      args:
        ENV_NAME: ${ENV_NAME:-dev1}
        INCLUDE_CA: ${INCLUDE_CA:-0}
    image: racine_ci_cd_backend:latest
    container_name: backend
    env_file:
      - ./envs/${ENV_NAME}.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_TIME_ZONE=${DJANGO_TIME_ZONE}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - appnet
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet
    restart: unless-stopped

  mobile:
    profiles: ["mobile"]
    build:
      context: ./mobile
      args:
        ENV_NAME: ${ENV_NAME:-dev1}
        INCLUDE_CA: ${INCLUDE_CA:-0}
    image: racine_ci_cd_mobile:latest
    container_name: mobile
    environment:
      - EXPO_DEV_CLIENT=0
    networks:
      - appnet
    restart: unless-stopped

networks:
  appnet:

volumes:
  pgdata:
